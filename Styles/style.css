@import url("https://fonts.googleapis.com/css2?family=Montserrat+Alternates:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Pacifico&family=Palanquin+Dark:wght@400;500;600;700&family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

/* custom props  global variables */

:root {
  /* Colors */
  --tertiaryColor: #ff424d;
  --primaryColor: #62bde7;
  --customBackgroundColorDarkMode: #488d9f;
  --CustomTertiaryColor: #b5d4b9;
  --primaryColorLightGray: #cad3da;

  /* Fonts */
  --primaryFont: "Montserrat Alternates", sans-serif;
  --secondaryFont: "Poppins", sans-serif;
  --tertiaryFont: "Pacifico", cursive;
  --tertiaryFontExtra: "Palanquin Dark", sans-serif;

  /* box shadows */
  --boxShadowLightBehind: 0 0 2em -1em var(--DarkModeOpacity);
  --boxShadowDarkOut: 0 0 5em 1em var(--DarkModeOpacity);
  --textThreeD: 3px 3px 1px var(--primaryColor);
  --linkTextShadow: 0.5px 0.5px 5px #488e9f9d;

  /*  */

  --transition-5ms-Ease: all 0.5s ease;
  --transition-backgroundColor-Ease: background-color 0.5s ease;
  --aboveLayer: 9999;

  /* Sizes */
  --cardHeight: 27.5em;
  --userAvatarContainerSize: calc(2vw + 2vh + 10px);
  --navButtonContainerSize: calc(2vw + 2vh + 2rem);
  --logoWidth: 150px;
  --switchModeBlockSize: 55px;
  --asideSvgIcons: 25px;
  --dialogWidth: 30vw;
  --dialogHeight: 80vh;
  --cardBorderRadius: 0.5rem;
  --largeCardBorderRadius: 0.75rem;
  --btnBorderRadius: 0.25rem;
  --searchBarBorderRadius: calc(1rem + 0.25vw + 0.25vh);
  --imageMaxWidth: calc(30vw + 20vh + 10% + 2.5rem);
  --imageMaxHeight: calc(30vh + 20vw + 10% + 2.5rem);
  --imageBorderRadius: calc(0.5rem + var(--cardBorderRadius));
  --cardBorderRadiusThin: 0.25rem;
  --inputBorderRadius: 0.75rem;
  --logoScale: 85%;
  --navScale: 40%;
  --padding-500: 1.5em;

  /* Font sizes */

  --headFontSize: calc(1em + 0.5vh + 0.5vw + 1vmax);
  --paragraphFS: 1rem;

  --btnFontSize: calc(1rem + 20% + 0.5vw + 0.5vh);
  --navFontSize: calc(0.1rem + 30% + 0.5vw + 0.5vh);
  --heroSectionTitle: calc(1.5rem + 1vw + 1vh + 25%);
  --headTitleFontSize: calc(90% + 0.75vh + 0.75vw + 0.75rem);
  --headTitleFontSizeLarger: calc(90% + 1vh + 1vw + 1rem);
  --subTitleFontSize: calc(50% + 0.25vh + 0.25vw + 0.25rem);
  --titleFontSize: calc(1vmax + 0.5vw + 5px + 0.5vh);
  --calcFontSize: calc(80% + 0.5vh + 0.5vw);
  --dateFontSize: calc(1.2rem + 12%);
  --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
  --descriptionLabelFS: calc(2px + 0.5vmax);
}

@media (prefers-color-scheme: dark) {
  /* redefine dark mode colors here */
  :root {
    --primaryColorDark: #181414;
    --primaryColorLight: #fffeff;
    --secondaryColor: #707070;
    --CustomTertiaryColor: #b5d4b9;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #1d2325;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #23282ea2;
    --labelColor: #aaa9b6;
    --inputBackgroundColor: #2a3133;
  }
}

@media (prefers-color-scheme: light) {
  /* redefine dark mode colors here */
  :root {
    --primaryColorDark: #fffeff;
    --primaryColorLight: #181414;
    --secondaryColor: #707070;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #d9e9f1;
    --customBackgroundColorDarkMode: #cbd9df;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #e2efffa2;
    --labelColor: #978f8f;
    --inputBackgroundColor: #2a3133;
  }
}

@media (max-width: 90em) {
  :root {
    --width-700: calc(30vw + 10rem + 10vmax + 5vh);
    --height-700: calc(25vh + 5rem + 5vw);
    --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
    --titleFontSize: calc(2vmax + 1.5vw + 10px + 1.5rem + 1.5vh);
  }
}

@media (max-width: 50em) {
  :root {
    --userAvatarContainerSize: calc(2vw + 2vh + 10px + 0.5rem);
    --largeHeadingFS: calc(1.5vmax + 2.65rem);
    --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
    --subHeadingFS: calc(1vmax + 0.5rem + 0.25vw + 0.25vh + 0.25em);
    --titleFontSize: calc(2vmax + 1.5vw + 10px + 1.5rem + 1.5vh);
    --paragraphFS: calc(1rem + 0.5vmax);
    --bodyFS: calc(1.05vw + 0.55vh + 0.85rem);
    --navFS: calc(1.5vmax + 0.5vw + 0.5rem);
    --buttonFs: calc(0.5rem + 0.75vmax);
    --shadowBlur: 25px;
    --margin: 2rem;
    --spacing-700: 5em;
    --width-700: 90vw;
    --height-700: 200px;
    --padding-200: 1.5rem;
    --spacing-200: 0.5em;
    --iconSize-300: 2rem;
    --iconSize-400: 3rem;
  }
}

/* 
*
*
Remove and assign new Global styling
*
*
*/

/* Remove all animations, transitions and smooth scroll for people that does not like animations */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.primaryColor {
  color: var(--primaryColor);
}

.secondaryColor {
  color: var(--tertiaryColor);
}

.globalData {
  position: absolute;
  transform: translate(-25555555555555%, -2555555555555%);
}

*,
*::before,
*::after {
  scroll-behavior: smooth;
  box-sizing: border-box;
  outline: none;
  list-style: none;
  text-decoration: none;
  font: inherit;
  margin: 0;
  padding: 0;
  word-wrap: break-word;
  border: unset;
  accent-color: var(--primaryColor);
  color-scheme: dark light;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed;
  transition: color 0.7s ease-in-out, background-color 2s ease-in-out;
}

/* *:focus-within,
*:focus-visible {
} */

/* 
      // Scroll bar
      */

::-webkit-scrollbar {
  width: 12px;
  background-color: var(--backgroundColor);
}

::-webkit-scrollbar-thumb {
  background-color: var(--primaryColor);
  border: var(--backgroundColor) 2px solid;
  border-radius: 5em;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #365463;
  cursor: pointer;
}

/* Element styling */

img,
picture,
svg {
  max-width: 100%;
  display: block;
  object-fit: cover;
  image-rendering: optimizeQuality;
  pointer-events: none;
}
use {
  pointer-events: none;
}
#themeIconLink {
  /* support firefox */
  pointer-events: all;
}

/* Typography styling */
h1,
h2,
h3,
h4 {
  /* margin: 0 0 0.25rem 0; */
  font-size: var(--titleFontSize);
  color: var(--primaryColorLight);
  font-family: var(--primaryFont);
  font-weight: 700;
}

p {
  font-size: var(--paragraphFS);
  font-weight: 400;
  font-family: var(--secondaryFont);
  color: var(--primaryColorLightGray);
}

label {
  margin: 0;
  padding: 0;
  color: var(--primaryColorLight);
  font-weight: 500;
  color: var(--primaryColorLightGray);
  font-family: var(--secondaryFont);
  transition: all 0.5s ease;
}

a {
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  font-family: var(--primaryFont);
  font-size: var(--navFS);
  letter-spacing: 1px;
  color: var(--primaryColorLight);
  font-weight: var(--semiBold);
}

/* buttons */

button {
  --backColor: var(--primaryColor);
  --faceColor: var(--primaryColorLight);
  appearance: none;
  padding: 1rem;
  font-size: 1.25rem;
  font-weight: 600;
  border-radius: var(--btnBorderRadius);
  width: 150px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  align-content: center;
  transform-origin: center;
  transform: scale(0.95);
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
  background-color: var(--backColor);
  color: var(--faceColor);
  overflow: hidden;
  border: 2.5px solid var(--backColor);
}

button:hover {
  --backColor: var(--primaryColorLight);
  --faceColor: var(--primaryColor);
  transform: scale(1);
}

button > svg {
  max-width: 30px;
  max-height: 30px;
  fill: var(--faceColor);
  transform: translate(10%, 10%);
  filter: drop-shadow(0 1px 15px #1f1e1e96);
}

/* secondary button */

button.SecondaryBtn {
  --backColor: transparent;
  --faceColor: var(--tertiaryColor);
  border-color: var(--faceColor);
  border-radius: var(--btnBorderRadius);
}

button:hover.SecondaryBtn {
  --backColor: var(--tertiaryColor);
  --faceColor: var(--primaryColorLight);
  border-color: transparent;
}

input,
textarea,
select {
  padding: 10px;
  font-family: var(--secondaryFont);
  caret-color: var(--primaryColor);
  background-color: var(--inputBackgroundColor);
  font-weight: normal;
  resize: none;
  border-radius: var(--cardBorderRadiusThin);
  transition: all 0.5s ease;
}

input {
  transition: all 0.5s ease;
}

textarea {
  padding-top: 1rem !important;
}

ul,
li {
  display: contents;
}
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  text-indent: 1px;
  text-overflow: "";
  padding: 1rem;
  cursor: pointer;
}

option {
  color: var(--primaryColor);
}

::selection {
  background-color: var(--primaryColor);
  color: var(--tertiaryColor);
  text-shadow: none;
}

::-moz-selection {
  background-color: var(--primaryColor);
  color: var(--tertiaryColor);
  text-shadow: none;
}

abbr {
  position: relative;
  cursor: help;
}
abbr.visible::after,
abbr:hover::after,
abbr:focus::after,
abbr:focus-visible::after,
abbr:focus-within::after {
  content: attr(title);
  position: absolute;
  top: -0.25rem;
  left: 0;
  width: 45ch;
  border-radius: 0.3rem;
  padding: 1rem 0;
  text-align: center;
  color: var(--primaryColorLight);
  background-color: var(--backgroundColorOpacity);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  transform: translateY(-100%);
}

/* Skip nav */
.SkipNav {
  position: absolute;
  top: 1em;
  left: 1em;
  transform: translateY(-130%);
  color: var(--primaryColor);
  z-index: 9999;
  padding: 1.5em;
  cursor: pointer;
  background-color: var(--backgroundColorOpacity);
  color: var(--secondaryColor);
  border-radius: 0.5rem;
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
}

.skipNav:hover {
  color: var(--primaryColor);
  transition: all 0.2s ease;
  transform: scale(1.05) translateY(0%);
}
.skipNav:focus,
.skipNav:focus-visible {
  transform: translateY(0%);
  transition: all 0.5s ease-in;
}

/* Set core root defaults */
body,
body:focus-within,
html,
html:focus-within {
  scroll-padding: var(--scrollPadding, 10vh);
  overflow-x: hidden !important;
  max-width: 100vw;
}

/* Set core  defaults */
body {
  width: 100vw;
  line-height: 1.5;
  background: var(--backgroundColor);
  transition: all 0.2s ease;
  font-size: var(--FS);
  font-family: var(--primaryFont);
  font-weight: 400;
  position: relative;
  word-spacing: 1px;
  padding: 0 1rem;
  display: grid;
  align-items: center;
  justify-content: center;
}

/* when another element is observing disable scrolling */
body[isObserving="false"] {
  height: 100vh !important;
  max-width: 100vh !important;
  overflow: hidden !important;
  overflow-y: hidden !important;
}

/* Header */

header {
  position: fixed;
  inset: 0;
  z-index: var(--aboveLayer);
  width: 100%;
  height: 15vh;
  display: grid;
  grid-template-columns: 10% 20% 60% 20% 10%;
  place-content: center;
  place-items: center;
  place-self: center;
  background-color: transparent;
}

header[isInteracting="true"] {
  transform: translateY(-5%);
  height: 8vh;
  -webkit-backdrop-filter: blur(50px);
  backdrop-filter: blur(50px);
  background-color: var(--backgroundColor);
  opacity: 0.8;
}

header:hover[isInteracting="true"] {
  opacity: 1;
  transform: translateY(0%);
  height: 10vh;
}
/* Logo */
.mainLogo {
  grid-column: 2;
  pointer-events: all;
  width: var(--logoWidth);
  height: 100%;
  object-fit: contain;
  cursor: pointer;
}

/* menu */

/* menu toggle button */

.navButton {
  --_lineColor: var(--primaryColorLight);
  width: var(--navButtonContainerSize);
  height: 3.5rem;
  background-color: transparent;
  border: none;
  display: grid;
  place-items: center;
  place-self: center;
  align-content: center;
  gap: 0.75em;
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
  z-index: var(--aboveLayer);
  display: none;
}

.navButton:hover {
  transform: scale(1.1);
  --_lineColor: var(--primaryColor);
}

.line {
  width: 100%;
  height: 0.25rem;
  background-color: var(--_lineColor, --primaryColorLight);
  z-index: 2;
  border-radius: 2.5rem;
  pointer-events: none;
  transition: var(--transition-5ms-Ease);
}

.navButton:hover .LineNumOne {
  transform: translateX(15%);
}

.navButton:hover .LineNumThree {
  transform: translateX(-15%);
}

.navButton[isToggled="true"] {
  --_lineColor: var(--primaryColor);
}

.navButton:hover[isToggled="true"] {
  --_lineColor: var(--primaryColorLight);
}

/* .navButton[isToggled="true"] .LineNumOne {
}
.navButton[isToggled="true"] .LineNumTwo {
  opacity: 0;
}

.navButton[isToggled="true"] .LineNumThree {
} */

/* navigation bar */
.mainNav {
  grid-column: 3;
  display: flex;
  align-items: center;
  justify-content: space-around;
  justify-self: right;
  width: 60%;
  transition: width 1s ease-in-out;
}

/* on mobile and tablet screen */
.mainNav[isExpanded="true"] {
  position: fixed;
  top: 0;
  left: 0;
  height: 100vh !important ;
  width: 100vw !important;
  background-color: var(--primaryCardColor);
  align-content: center;
  gap: 5rem;
  display: grid !important;
}

.link {
  font-size: var(--navFontSize);
  transform: scale(0.95);
  transition: var(--transition-5ms-Ease);
  font-family: var(--secondaryFont);
  color: var(--primaryColorLight);
  font-weight: 500;
}

.link:hover {
  transform: scale(1.1);
  color: var(--primaryColor);
  transform-origin: center;
  text-shadow: var(--linkTextShadow);
}

.link[active="true"] {
  color: var(--primaryColor);
  transform: scale(1.1);
  text-shadow: var(--linkTextShadow);
}

/* Theme switch button */

.switchMode {
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  transition: all 0.5s ease;
  cursor: pointer;
  z-index: var(--aboveLayer);
}

.switchMode[currentMode="dark"] {
  fill: #3777d6;
  filter: drop-shadow(1px 1px 2em #2265c9b2);
}

.switchMode[currentMode="dark"]:hover {
  filter: drop-shadow(1px 1px 2em #c0820fb0);
  fill: #e48a14;
}

.switchMode[currentMode="light"] {
  fill: #e48a14;
  filter: drop-shadow(1px 1px 2em #c0820fb0);
}

.switchMode[currentMode="light"]:hover {
  fill: #2265c9b2;
  filter: drop-shadow(1px 1px 2em #212f44);
}

.themeIcon {
  max-width: var(--switchModeBlockSize);
  max-height: var(--switchModeBlockSize);
  cursor: pointer;
  transition: all 0.5s ease;
}

dropDownMenu {
  grid-column: 4;
  position: relative;
}

.userAvatar {
  pointer-events: all;
  height: var(--userAvatarContainerSize);
  width: var(--userAvatarContainerSize);
  border-radius: 50%;
  cursor: pointer;
}

#userName {
  font-size: calc(var(--btnFontSize) - 0.25rem);
  font-weight: bolder;
  font-family: var(--tertiaryFontExtra);
  color: var(--primaryColor);
  position: relative;
  margin-bottom: 1.5em;
}

#userName::after {
  position: absolute;
  content: "";
  height: 5px;
  width: 95%;
  bottom: -0.75em;
  left: 0.1em;
  background-color: var(--primaryColor);
  border-radius: 2.5rem;
}

.dropDownList {
  position: absolute;
  display: grid;
  background-color: var(--primaryCardColor);
  top: 100%;
  left: 0;
  height: 50vh;
  width: 12.5vw;
  justify-content: center;
  align-items: center;
  align-content: space-around;
  padding: 1em 0;
  border-radius: var(--cardBorderRadius);
  transform: scale(0) translate(-35%, -100%);
  transform-origin: top top;
  opacity: 0;
  transition: var(--transition-5ms-Ease);
}

.dropDownLinkParent {
  width: 110% !important;
}

.dropDownLink {
  display: flex;
  align-items: center;
  gap: 10%;
  align-content: center;
  width: 100%;
  color: var(--primaryColorLight) !important;
}

.dropDownSvgIcon {
  max-width: 25px;
  max-height: 25px;
  fill: var(--primaryColor);
}

dropDownMenu[aria-expanded="true"] .dropDownList {
  transform: translate(-35%, 1%) scale(1);
  opacity: 1;
}

.searchBarInput {
  width: 100%;
  height: 100%;
  padding-left: 1.5rem;
  border-radius: var(--searchBarBorderRadius);
}

.searchSubmitButton {
  position: absolute;
  top: 0;
  right: 0;
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  height: 100%;
  width: 20%;
  border-radius: 2px;
  padding: 0;
  border: none;
  background-color: transparent;
  transform: scale(1);
}

.searchBarIcon {
  width: 30px;
  height: 30px;
  transform: translate(0, 0);
  fill: var(--primaryColor);
  transition: all 0.3s ease;
}

.searchSubmitButton:hover .searchBarIcon {
  fill: var(--primaryColorLight);
}

/* Custom Alert */
.notificationCenter {
  min-height: 10vh;
  display: grid;
  grid-template-rows: repeat(auto-fill, 150px);
  align-items: center;
  justify-content: center;
  align-content: space-around;
  width: 30vw;
  position: fixed;
  bottom: 0;
  right: 0;
  z-index: 999;
  transition: all 0.5s ease-in-out;
  transform: translate(100%);
}

.customAlert {
  pointer-events: all;
  position: relative;
  margin: 0.2rem 0;
  padding: 1.5em 2em;
  display: grid;
  gap: 0.5em 0;
  align-items: center;
  justify-content: center;
  background-color: var(--primaryCardColor);
  color: var(--primaryColorLight);
  border-radius: var(--cardBorderRadius);
  animation: slideUp 0.5s ease-in both;
  z-index: var(--aboveLayer);
}

.closeBtn {
  pointer-events: all;
  position: absolute;
  top: 0.75em;
  right: 0.75em;
  max-width: 20px;
  max-height: 20px;
  fill: var(--secondaryColor);
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
}
.closeBtn:hover {
  fill: var(--tertiaryColor);
  transform: scale(1.1);
}

.customAlertLink {
  --_currentColor: var(--primaryColor);
  position: relative;
  font-size: var(--paragraphFS);
  color: var(--_currentColor);
  font-weight: 600;
  transform-origin: left center;
  transition: var(--transition-5ms-Ease);
}

.customAlertLink[notVisible="false"]::after {
  content: "→";
  transform: scale(1.8);
  margin-left: 0.2em;
  color: var(--_currentColor);
}

.customAlertLink:hover {
  --_currentColor: var(--primaryColorLight);
  transform: scale(1.1);
  color: var(--_currentColor);
}

.customAlertLink[notVisible="true"]::after {
  display: none;
}

/* main content */
main {
  display: grid;
  align-items: center;
  justify-content: center;
  margin: 15vh auto 0;
}

/* footer */
.mainFooter {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: 10% 10% 20% 10% 40% 10%;
  grid-template-rows: 60% 30% 10%;
  justify-content: center;
  align-items: center;
  position: relative;
}

.footerHeroSection {
  grid-column: 1 / span 5;
  grid-row: 1;
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 3;
  display: grid;
  place-self: center;
  place-items: center;
  place-content: center;
}

.upperFooterArticle {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-around;
  align-content: center;
  place-self: center;
  padding: 0em 2em;
  gap: 2rem;
}

.footerHeroImage {
  max-height: var(--imageMaxHeight);
  max-width: var(--imageMaxWidth);
  position: absolute;
  right: 0;
  bottom: 1em;
  z-index: 2;
}

.footerHeroSectionTitle {
  font-size: calc(var(--heroSectionTitle));
  line-height: 1.3;
  position: absolute;
  top: 1em;
  left: 2em;
}

.floorShape {
  width: 100vw;
  fill: var(--primaryColor);
  z-index: -1;
  position: absolute;
  bottom: 0;
}

/* bottom footer */
.Footer.backgroundColor {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 50%;
  background-color: var(--customBackgroundColorDarkMode);
  z-index: -10;
}

.footerLogo {
  -ms-grid-column: 2 / span 3;
  grid-column: 2 / span 3;
  -ms-grid-row: 2;
  grid-row: 2 / span 3;
  height: 50%;
  width: 100%;
  object-fit: contain;
  transform: translate(-10%, 5%);
}

.footerActionButtons {
  -ms-grid-column: 5;
  grid-column: 5;
  -ms-grid-row: 2;
  grid-row: 2;
  display: flex;
  gap: 2em;
  padding: 2em;
  transform: translate(10%, 40%);
}

.socialLinksAside {
  grid-column: 1;
  grid-row: 2;
  width: max(5vw, 5%);
  height: 100%;
  transform: translateY(15%);
  display: grid;
  justify-content: center;
  align-content: space-around;
}

.footerLinksSvg {
  pointer-events: all;
  fill: var(--primaryColor);
  max-width: var(--asideSvgIcons);
  max-height: var(--asideSvgIcons);
  transform: scale(1) rotate(-90deg);
  transition: var(--transition-5ms-Ease);
}

.footerLinksSvg:hover {
  transform: scale(1.3) rotate(0deg);
  fill: var(--tertiaryColor);
}

.copyRight {
  grid-column: 1 / span 6;
  grid-row: 3;
  width: 100%;
  text-align: center;
  font-size: var(--paragraphFS);
  color: var(--primaryColorLight);
}

.author {
  font-size: calc(var(--paragraphFS) + 0.25rem);
  font-weight: bolder;
  color: var(--primaryColor);
  position: relative;
}

.author::after {
  content: attr(authorName);
  position: absolute;
  width: 150px;
  padding: 0.5rem 0;
  left: -115%;
  top: -160%;
  font-size: 1rem;
  background-color: var(--primaryColor);
  color: var(--primaryColorLight);
  border-radius: var(--cardBorderRadius);
  transform: translateY(100%) scale(0);
  opacity: 0;
  transition: var(--transition-5ms-Ease);
  font-family: var(--secondaryFont);
}

.author:hover::after {
  transform: translateY(0%) scale(1);
  opacity: 1;
}

@media only screen and (min-width: 1700px) {
  .floorShape {
    transform: translate(15%, 10%) scale(1.6) !important;
  }
}
/* laptop screen size */
@media only screen and (max-width: 1400px) {
  /*   .floorShape {
        transform: scale(1.15) translate(-5%, 17.5%);
      } */
  /* .heroSectionTitle {
    font-size: calc(var(--heroSectionTitle) + 0.75rem);
  } */
}

@media only screen and (max-width: 800px) {
  header {
    display: flex;
    justify-content: space-around;
  }
  main {
    display: grid;
    align-items: flex-end;
    justify-content: center;
    align-content: space-around;
    margin-top: 15vh;
  }
  .mainNav {
    display: none;
  }
  .mainNav[isToggled="true"] {
    display: grid;
  }
  .navButton {
    display: grid;
  }
  .link {
    font-size: calc(var(--subTitleFontSize) + 0.5rem);
  }
  .link[animation="true"] {
    transform: translate(500%);
    animation-fill-mode: forwards;
  }
  .logoParent {
    width: 180px;
    height: 80%;
    position: absolute;
    left: 0;
    margin-left: 1rem;
  }
}

/* Resister and login forms */

.formCloseBtn {
  position: absolute;
  right: 1em;
  top: 1em;
  cursor: pointer;
  font-size: 1.25rem;
  font-weight: 500;
  font-family: var(--secondaryFont);
  color: var(--tertiaryColor);
  border: 2px solid currentColor;
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  text-align: center;
  height: 2rem;
  width: 2rem;
  border-radius: 50%;
}

.authForm {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: grid;
  align-items: center;
  justify-content: center;
  align-content: space-around;
  background-color: var(--primaryCardColor);
  color: var(--primaryColorLight);
  border-radius: var(--cardBorderRadiusThin);
  border: 1px solid var(--primaryColor);
  width: var(--dialogWidth);
  height: var(--dialogHeight);
  display: grid;
  align-items: center;
  justify-content: center;
  align-content: space-around;
  overflow: hidden;
  transition: all 0.5s ease-in-out;
}
.authForm[visible="false"] {
  opacity: 0;
  pointer-events: none;
  transform: translate(-50%, -50%) scale(0);
  z-index: -55555;
}
.authForm[visible="true"] {
  opacity: 1;
  pointer-events: all;
  transform: translate(-50%, -50%) scale(1);
  z-index: var(--aboveLayer);
}

.formHeader {
  /* background-color: var(--primaryColor); */
  display: flex;
  align-items: center;
  justify-content: space-around;
  height: 15vh;
}

.formCloseButton {
  background-color: transparent;
  padding: 0;
  margin: 0;
  width: 30px;
  height: 30px;
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  border-radius: 50%;
  color: var(--tertiaryColor);
  border: 2.5px currentColor solid;
  padding: 0.5rem;
  position: absolute;
  right: 1em;
  top: 1em;
}
.formLogo {
  width: 200px;
  height: 100px;
  object-fit: contain;
}

.formTitle {
  font-size: var(--titleFontSize);
  font-weight: bolder;
  font-family: var(--primaryFont);
}

.userAvatarContainer {
  position: absolute;
  top: 4em;
  left: 50%;
  transform: translateX(-50%);
  z-index: var(--aboveLayer);
  width: 150px;
  height: 150px;
  border-radius: 50%;
  border: 2px solid var(--primaryColor);
  padding: 0;
  display: none;
}

.mainFormContent {
  margin-top: 20vh;
  display: grid;
  align-items: center;
  justify-content: space-around;
  align-content: space-around;
  gap: 1em 0;
}

.inputFieldContainer {
  position: relative;
  display: grid;
  width: 100%;
  margin: 0.5em;
  padding: 0;
  transition: all 0.5s ease;
}

.authFormInputFiledLabel {
  position: absolute;
  left: 20px;
  top: 0;
  transform: translateY(50%);
}

.inputFieldContainer:has(input:focus, input:focus-within, input:focus-visible)
  .inputField {
  border: 1px solid var(--primaryColor);
}

.inputFieldContainer:has(input:focus, input:focus-within, input:focus-visible)
  .authFormInputFiledLabel {
  color: var(--primaryColor);
  transform: translateY(-50%) scale(1.05);
}
.inputFieldContainer:has(input[hasContent="true"]) .authFormInputFiledLabel {
  transform: translateY(-50%) scale(1.05);
}

.inputField {
  width: 100%;
  height: 100%;
}

.inputDescription {
  font-size: var(--descriptionLabelFS);
  margin: 0.5rem 0 0 0.5rem;
  font-weight: 500;
  color: var(--primaryColorLightGray);
}
.inputDescription[valid="false"] {
  color: var(--tertiaryColor);
}
.inputField[valid="false"] {
  color: var(--tertiaryColor);
  border: 1px solid var(--tertiaryColor);
}

.genderList {
  position: relative;
  left: 0.5em;
}

.formFooter {
  width: 80%;
  height: 10%;
  text-align: center;
  margin: 0 auto;
}
