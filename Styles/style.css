@import url("https://fonts.googleapis.com/css2?family=Montserrat+Alternates:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Pacifico&family=Palanquin+Dark:wght@400;500;600;700&family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

/* ? Custom props  global variables */

:root {
  /* ? Colors */
  --primaryColor: #50a3ca;
  --tertiaryColor: #ec4149;

  /* ? Fonts */
  --primaryFont: "Montserrat Alternates", sans-serif;
  --secondaryFont: "Poppins", sans-serif;
  --tertiaryFont: "Pacifico", cursive;
  --tertiaryFontExtra: "Palanquin Dark", sans-serif;

  /* ? Box shadows */
  --text-shadow-200: 0.5px 0.5px 5px #488e9f9d;
  --box-shadow-200: 0 0 2em -1em var(--DarkModeOpacity);
  --box-shadow-500: 1px 1px 3em -1em var(--shadow-color-100);
  --box-shadow-600: 0 0 5em 1em var(--DarkModeOpacity);

  /* ? Transitions   */

  --transition-5ms-Ease: all 0.5s ease;
  --transition-backgroundColor-Ease: background-color 0.5s ease;

  /* ? Layers */
  --aboveLayer: 9999;
  --backLayer: -9999;

  /* ? Sizes */

  /* * Containers */

  /* ** Custom */
  --userAvatarContainerSize: calc(2vw + 2vh + 10px);
  --navButtonContainerSize: calc(2vw + 2vh + 2rem);

  /* * Normal */
  --size-000: calc(1vh + 1vw + 2vmax + 30%);
  --size-100: calc(2vh + 15% + 2vw + 1em);
  --size-300: calc(5vh + 20% + 5vw + 2em);
  --size-400: calc(7.5vh + 25% + 7.5vw + 2em);
  --size-500: calc(7.5vh + 35% + 7.5vw);
  --size-600: calc(10vh + 35% + 10vw);
  --size-700: calc(30vh + 20vw + 10% + 2.5rem);

  /* * Radius */
  --radius-100: 0.25rem;
  --radius-200: 0.5rem;
  --radius-300: 0.75rem;
  --radius-400: 1rem;
  --radius-dynamic: calc(1rem + 0.25vw + 0.25vh);
  --radius-rounded: 100em;
  --radius-circle: 50%;

  /* * Widths */

  /* ** Custom */
  --dialogWidth: max(25vw, 300px);

  /* ** Normal */
  --width-200: 150px;
  --width-700: 90vw;

  /* * Heights */
  /* ** custom */
  --headerHight: min(15vh, 15dvh);
  --cardHeight: 27.5em;
  --dialogHeight: max(500px, 50vh);

  /* ** Normal */
  --height-700: 200px;

  /* * Icons */
  --icon-100: 20px;
  --icon-200: 25px;
  --icon-300: 30px;
  --icon-500: 40px;
  --icon-800: 55px;

  /* * Paddings */
  --padding-100: 0.75em;
  --padding-200: 2em;
  --padding-700: 6em;
  --padding-scroll: var(--headerHight);

  /* * Gaps and Margins */
  --spacing-100: 1rem;
  --spacing-200: 2em;
  --spacing-400: 3.5em;
  --spacing-600: 4em;
  --spacing-700: 5em;
  --spacing-900: 15vh;
  --spacing-dynamic: calc(1dvh + 1vw + 0.5vmax + 0.5em + 5%);

  /* * Font sizes */
  --heroSectionTitle-xl: calc(1vw + 1vh + 25% + 1vmax);
  --heroSectionTitle: calc(1em + 1vw + 1vh + 25% + 1vmax);
  --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
  --subHeadingFS: calc(50% + 0.25vmax + 0.25vh + 0.25vw + 0.25em);
  --paragraphFontSize: calc(0.5rem + 0.5vw + 0.4vh);
  --btnFontSize: calc(1rem + 20% + 0.5vw + 0.5vh);
  --navFontSize: calc(0.1rem + 30% + 0.5vw + 0.5vh);
  --dateFontSize: calc(1.2rem + 12%);
  --descriptionLabelFS: calc(2px + 0.5vmax);
  --bodyFontSize: calc(10px + 0.25rem + 25%);
}

@media (prefers-color-scheme: dark) {
  /* redefine dark mode colors here */
  :root {
    --primaryColorDark: #181414;
    --primaryColorLight: #fffeff;
    --secondaryColor: #707070;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #1d2325;
    --cardBackgroundColorOpacity: #18292e71;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #23282ea2;
    --labelColor: #aaa9b6;
    --inputBackgroundColor: #2a3133;
    --primaryColorLightGray: #cad3da;
    --shadow-color-100: #1825317a;
    --customBackgroundColorDarkMode: #488d9f;
  }
}

@media (prefers-color-scheme: light) {
  /* redefine dark mode colors here */
  :root {
    --primaryColorDark: #fffeff;
    --primaryColorLight: #181414;
    --secondaryColor: #707070;
    --DarkModeOpacity: #0a0a0ae3;
    --backgroundColor: #d9e9f1;
    --cardBackgroundColorOpacity: #ccf4fc7a;
    --customBackgroundColorDarkMode: #cbd9df;
    --backgroundColorOpacity: #1d2325b0;
    --primaryCardColor: #e2efffa2;
    --labelColor: #978f8f;
    --inputBackgroundColor: #2a3133;
    --primaryColorLightGray: #a4adb4;
    --shadow-color-100: #9ea7b686;
  }
}

@media (max-width: 90em) {
  :root {
    /* ? Sizes */

    /* * Containers */

    /* ** Custom */

    /* * Normal */

    --size-700: calc(25vw + 18vh + 10% + 2rem);

    /* * Radius */

    /* * Widths */

    /* ** Custom */

    /* ** Normal */

    /* * Heights */
    /* ** custom */

    /* ** Normal */

    /* * Font sizes */
    --heroSectionTitle-xl: calc(1vw + 1vh + 25% + 1vmax);
    --heroSectionTitle: calc(0.25em + 1vw + 1vh + 1.5vmax + 25%);
    --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
    --subHeadingFS: calc(50% + 0.25vmax + 0.25vh + 0.25vw + 0.25em);
    --paragraphFontSize: 1rem;
    --btnFontSize: calc(1rem + 20% + 0.5vw + 0.5vh);
    --navFontSize: calc(0.1rem + 30% + 0.5vw + 0.5vh);
    --dateFontSize: calc(1.2rem + 12%);
    --descriptionLabelFS: calc(2px + 0.5vmax);
    --bodyFontSize: calc(10px + 0.25rem + 25%);
  }
}

@media (max-width: 50em) {
  :root {
    /* ? Sizes */

    /* * Containers */

    /* ** Custom */
    --userAvatarContainerSize: calc(2vw + 2vh + 10px + 0.5rem);
    --navButtonContainerSize: calc(2vw + 2vh + 2rem);

    /* * Normal */
    --size-700: calc(30vw + 20vh + 20% + 2rem);

    /* * Radius */

    /* * Widths */

    /* ** Custom */

    /* ** Normal */

    /* * Heights */
    /* ** custom */

    /* ** Normal */

    /* * Icons */

    /* * Paddings */

    /* * Gaps and Margins */

    /* * Font sizes */

    --heroSectionTitle-xl: calc(1vw + 1vh + 40% + 2vmax);
    --heroSectionTitle: calc(1vw + 1vh + 25% + 1vmax);
    --headingFS: calc(2vmax + 0.75rem + 0.75vw + 0.5vh);
    --subHeadingFS: calc(50% + 0.25vmax + 0.25vh + 0.25vw + 0.25em);
    --paragraphFontSize: 1rem;
    --btnFontSize: calc(1rem + 20% + 0.5vw + 0.5vh);
    --navFontSize: calc(0.1rem + 30% + 0.5vw + 0.5vh);
    --dateFontSize: calc(1.2rem + 12%);
    --descriptionLabelFS: calc(2px + 0.5vmax);
  }
}

/* Remove all animations, transitions and smooth scroll for people that does not like animations */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

.primaryColor {
  color: var(--primaryColor);
}

.secondaryColor {
  color: var(--tertiaryColor);
}

.flex {
  display: flex;
  align-items: center;
  justify-content: space-around;
}
.grid {
  display: grid;
  align-items: center;
}
.flip {
  transform: scaleX(-1);
}
.globalData {
  position: absolute;
  transform: translate(-25555555555555%, -2555555555555%);
}

*,
*::before,
*::after {
  scroll-behavior: smooth;
  box-sizing: border-box;
  outline: none;
  list-style: none;
  text-decoration: none;
  font: inherit;
  margin: 0;
  padding: 0;
  word-wrap: break-word;
  border: unset;
  accent-color: var(--primaryColor);
  color-scheme: dark light;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed;
  transition: color 0.7s ease-in-out, background-color 2s ease-in-out;
}

/* *:focus-within,
*:focus-visible {
} */

/* 
      // Scroll bar
      */

::-webkit-scrollbar {
  width: 12px;
  background-color: var(--backgroundColor);
}

::-webkit-scrollbar-thumb {
  background-color: var(--primaryColor);
  border: var(--backgroundColor) 2px solid;
  border-radius: 5em;
}

::-webkit-scrollbar-thumb:hover {
  background-color: #365463;
  cursor: pointer;
}

/* Element styling */

img,
picture,
svg {
  max-width: 100%;
  display: block;
  object-fit: cover;
  image-rendering: optimizeQuality;
  pointer-events: none;
}
use {
  pointer-events: none;
}
#themeIconLink {
  /* support firefox */
  pointer-events: all;
}

/* Typography styling */
h1,
h2,
h3,
h4 {
  /* margin: 0 0 0.25rem 0; */
  font-size: var(--headingFS);
  color: var(--primaryColorLight);
  font-family: var(--primaryFont);
  font-weight: 700;
}

p {
  font-size: var(--paragraphFontSize);
  font-weight: 400;
  font-family: var(--secondaryFont);
  color: var(--primaryColorLightGray);
}

label {
  margin: 0;
  padding: 0;
  font-weight: 500;
  color: var(--primaryColorLightGray);
  font-family: var(--secondaryFont);
  transition: all 0.5s ease;
}

a {
  text-decoration: none;
  cursor: pointer;
  display: inline-block;
  font-family: var(--primaryFont);
  font-size: var(--navFontSize);
  letter-spacing: 1px;
  color: var(--primaryColorLight);
  font-weight: 500;
}

/* buttons */

button {
  --backColor: var(--primaryColor);
  --faceColor: var(--primaryColorLight);
  appearance: none;
  padding: 1rem;
  font-size: 1.25rem;
  font-weight: 600;
  font-family: var(--secondaryFont);
  border-radius: var(--radius-100);
  width: 150px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  align-content: center;
  transform-origin: center;
  transform: scale(0.95);
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
  background-color: var(--backColor);
  color: var(--faceColor);
  overflow: hidden;
  border: 2.5px solid var(--backColor);
}

.buttonLbl {
  color: var(--faceColor);
}

button:hover {
  --backColor: var(--primaryColorLight);
  --faceColor: var(--primaryColor);
  transform: scale(1);
}

button > svg {
  max-width: 30px;
  max-height: 30px;
  fill: var(--faceColor);
  transform: translate(10%, 10%);
}

/* secondary button */

button.SecondaryBtn {
  --backColor: transparent;
  --faceColor: var(--tertiaryColor);
  border-color: var(--faceColor);
  border-radius: var(--radius-100);
}

button:hover.SecondaryBtn {
  --backColor: var(--tertiaryColor);
  --faceColor: var(--primaryColorLight);
  border-color: transparent;
}

button.noIcon {
  display: block;
  border: unset;
  font-weight: bolder;
}

.goUpButton {
  position: fixed;
  z-index: var(--aboveLayer);
  width: var(--icon-500);
  height: var(--icon-500);
  bottom: 10%;
  right: 0;
  border-radius: var(--radius-circle) 0 0 var(--radius-circle);
  background-color: var(--primaryColor);
  fill: var(--primaryColorLight);
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  opacity: 0;
  transition: all 0.3s ease-in-out, transform 0.7s ease-out;
  transform: translateX(-110%);
}

.goUpButton[go-top-button="true"]:hover {
  background-color: var(--tertiaryColor);
  transform: scale(1.5) translateX(-20%);
  border-radius: var(--radius-circle);
}

.goUpButton[go-top-button="true"] {
  transform: translateX(0);
  opacity: 0.7;
}
.clickable {
  pointer-events: all;
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
}
.sm-svg {
  padding-left: 0.2em;
  max-width: var(--icon-100);
  max-height: var(--icon-100);
}

.md-svg {
  fill: var(--primaryColor);
  max-width: var(--icon-200);
  max-height: var(--icon-200);
}

input,
textarea,
select {
  padding: 10px;
  font-family: var(--secondaryFont);
  caret-color: var(--primaryColor);
  background-color: var(--inputBackgroundColor);
  font-weight: normal;
  resize: none;
  border-radius: var(--radius-200);
  transition: all 0.5s ease;
}

input {
  transition: all 0.5s ease;
}

textarea {
  padding-top: 1rem !important;
}

ul,
li {
  display: contents;
}
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  text-indent: 1px;
  text-overflow: "";
  padding: 1rem;
  cursor: pointer;
}

option {
  color: var(--primaryColor);
}

::selection {
  background-color: var(--primaryColor);
  color: var(--tertiaryColor);
  text-shadow: none;
}

::-moz-selection {
  background-color: var(--primaryColor);
  color: var(--tertiaryColor);
  text-shadow: none;
}

abbr {
  position: relative;
  cursor: help;
}
abbr.visible::after,
abbr:hover::after,
abbr:focus::after,
abbr:focus-visible::after,
abbr:focus-within::after {
  content: attr(title);
  position: absolute;
  top: -0.25rem;
  left: 0;
  width: 45ch;
  border-radius: 0.3rem;
  padding: 1rem 0;
  text-align: center;
  color: var(--primaryColorLight);
  background-color: var(--backgroundColorOpacity);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  transform: translateY(-100%);
}

/* Skip nav */
.SkipNav {
  position: absolute;
  top: 1em;
  left: 1em;
  transform: translateY(-130%);
  color: var(--primaryColor);
  z-index: 9999;
  padding: 1.5em;
  cursor: pointer;
  background-color: var(--backgroundColorOpacity);
  border-radius: 0.5rem;
  -webkit-backdrop-filter: blur(5px);
  backdrop-filter: blur(5px);
}

.skipNav:hover {
  color: var(--primaryColor);
  transition: all 0.2s ease;
  transform: scale(1.05) translateY(0%);
}
.skipNav:focus,
.skipNav:focus-visible {
  transform: translateY(0%);
  transition: all 0.5s ease-in;
}

/* Set core root defaults */
body,
body:focus-within,
html,
html:focus-within {
  scroll-padding: var(--padding-scroll, --headerHight);
  overflow-x: hidden !important;
  background: var(--backgroundColor);
}

/* Set core  defaults */
body {
  max-width: min(100dvw, 1920px);
  line-height: 1.5;
  transition: all 0.2s ease;
  font-size: var(--bodyFontSize);
  font-family: var(--secondaryFont);
  font-weight: 400;
  position: relative;
  word-spacing: 1px;
  padding: 0 1rem;
  color: var(--primaryColorLight);
}

/* when another element is observing disable scrolling */
body[isObserving="false"] {
  height: 100dvh !important;
  max-width: 100vw !important;
  overflow: hidden !important;
}

/* ? Header */

header {
  position: fixed;
  inset: 0;
  z-index: var(--aboveLayer);
  width: 100%;
  height: var(--headerHight);
  display: grid;
  align-items: center;
  justify-content: center;
  grid-template-columns: 10% 15% 65% 10%;
}

header[isInteracting="true"] {
  --headerHight: min(8vh, 8dvh);
  transform: translateY(-5%);
  -webkit-backdrop-filter: blur(50px);
  backdrop-filter: blur(50px);
  background-color: var(--backgroundColor);
  opacity: 0.8;
}

header:hover[isInteracting="true"] {
  --headerHight: min(10vh, 10dvh);
  opacity: 1;
  transform: translateY(0%);
}

/* * Logo */
.mainLogo {
  grid-column: 2;
  width: var(--size-000);
  height: 100%;
  object-fit: contain;
  z-index: var(--aboveLayer);
}
.mainLogo:hover {
  transform: scale(1.1);
}

/* *  Navigation bar */
.mainNavigationBar {
  grid-column: 3;
  display: flex;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  transition: width 1s ease-in-out;
}

.navButton {
  display: none;
}

.link {
  font-size: var(--navFontSize);
  transform: scale(0.95);
  transition: var(--transition-5ms-Ease);
  font-family: var(--secondaryFont);
  color: var(--primaryColorLight);
  font-weight: 500;
}

.link:hover {
  transform: scale(1.1);
  color: var(--primaryColor);
  transform-origin: center;
  text-shadow: var(--text-shadow-200);
}

.link[active="true"] {
  color: var(--primaryColor);
  transform: scale(1.1);
  text-shadow: var(--text-shadow-200);
}

.link[isAuthenticated="true"] {
  display: block;
}

.link[isAuthenticated="false"] {
  display: none;
}

.callActionButtonsNav[isAuthenticated="true"] {
  display: none !important;
}

.callActionButtonsNav button {
  width: auto;
  height: auto;
  font-size: 1rem;
  padding: 0.75rem;
  margin: 0 0.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.callActionButtonsNav[isAuthenticated="false"] {
  display: flex !important;
  transform: translateX(50%);
}

/* * Theme switch button */

.switchMode {
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  transition: all 0.5s ease;
  cursor: pointer;
  z-index: var(--aboveLayer);
}

.switchMode[currentMode="dark"] {
  fill: #3777d6;
  filter: drop-shadow(1px 1px 2em #2265c9b2);
}

.switchMode[currentMode="dark"]:hover {
  filter: drop-shadow(1px 1px 2em #c0820fb0);
  fill: #e48a14;
}

.switchMode[currentMode="light"] {
  fill: #e48a14;
  filter: drop-shadow(1px 1px 2em #c0820fb0);
}

.switchMode[currentMode="light"]:hover {
  fill: #2265c9b2;
  filter: drop-shadow(1px 1px 2em #212f44);
}

.themeIcon {
  max-width: var(--icon-800);
  max-height: var(--icon-800);
  cursor: pointer;
  transition: all 0.5s ease;
}

/* * Drop down menu  */
dropDownMenu {
  grid-column: 4;
  position: relative;
}

.userAvatar {
  pointer-events: all;
  height: var(--userAvatarContainerSize);
  width: var(--userAvatarContainerSize);
  border-radius: 50%;
  cursor: pointer;
}

#userName {
  font-size: calc(var(--btnFontSize) - 0.25rem);
  font-weight: bolder;
  font-family: var(--tertiaryFontExtra);
  color: var(--primaryColor);
  position: relative;
  margin-bottom: 1.5em;
}

#userName::after {
  position: absolute;
  content: "";
  height: 5px;
  width: 95%;
  bottom: -0.75em;
  left: 0.1em;
  background-color: var(--primaryColor);
  border-radius: 2.5rem;
}

.dropDownList {
  position: absolute;
  display: grid;
  background-color: var(--primaryCardColor);
  top: 100%;
  left: 0;
  height: min(50vh, 50dvh);
  width: 12.5vw;
  justify-content: center;
  align-items: center;
  align-content: space-around;
  padding: 1em 0;
  border-radius: var(--radius-200);
  transform: scale(0) translate(-35%, -100%);
  transform-origin: top;
  opacity: 0;
  transition: var(--transition-5ms-Ease);
}

.dropDownLinkParent {
  width: 110% !important;
}

.dropDownLink {
  display: flex;
  align-items: center;
  gap: 10%;
  align-content: center;
  width: 100%;
  color: var(--primaryColorLight) !important;
}

.dropDownSvgIcon {
  max-width: 25px;
  max-height: 25px;
  fill: var(--primaryColor);
}

dropDownMenu[aria-expanded="true"] .dropDownList {
  transform: translate(-35%, 1%) scale(1);
  opacity: 1;
}

.searchBarInput {
  width: 100%;
  height: 100%;
  padding-left: 1.5rem;
  border-radius: var(--radius-dynamic);
}

.searchSubmitButton {
  position: absolute;
  top: 0;
  right: 0;
  display: grid;
  place-content: center;
  place-items: center;
  place-self: center;
  height: 100%;
  width: 20%;
  border-radius: 2px;
  padding: 0;
  border: none;
  background-color: transparent;
  transform: scale(1);
}

.searchBarIcon {
  width: 30px;
  height: 30px;
  transform: translate(0, 0);
  fill: var(--primaryColor);
  transition: all 0.3s ease;
}

.searchSubmitButton:hover .searchBarIcon {
  fill: var(--primaryColorLight);
}

/* ? Custom Alert */
.notificationCenter {
  min-height: min(10dvh, 10vh);
  display: grid;
  grid-template-rows: repeat(auto-fill, 150px);
  align-items: center;
  justify-content: center;
  align-content: space-around;
  width: 30vw;
  position: fixed;
  bottom: 0;
  right: 0;
  z-index: 999;
  transition: all 0.5s ease-in-out;
  transform: translate(100%);
}

.customAlert {
  pointer-events: all;
  position: relative;
  margin: 0.2rem 0;
  padding: 1.5em 2em;
  display: grid;
  gap: 0.5em 0;
  align-items: center;
  justify-content: center;
  background-color: var(--primaryCardColor);
  color: var(--primaryColorLight);
  border-radius: var(--radius-200);
  animation: slideUp 0.5s ease-in both;
  z-index: var(--aboveLayer);
  /* min-width: min(400px, 40vw); */
}

.closeBtn {
  pointer-events: all;
  position: absolute;
  top: 0.75em;
  right: 0.75em;
  max-width: 20px;
  max-height: 20px;
  fill: var(--secondaryColor);
  cursor: pointer;
  transition: var(--transition-5ms-Ease);
}
.closeBtn:hover {
  fill: var(--tertiaryColor);
  transform: scale(1.1);
}

.customAlertLink {
  --_currentColor: var(--primaryColor);
  position: relative;
  font-size: var(--paragraphFontSize);
  color: var(--_currentColor);
  font-weight: 600;
  transform-origin: left center;
  transition: var(--transition-5ms-Ease);
}

.customAlertLink[notVisible="false"]::after {
  content: "→";
  transform: scale(1.8);
  margin-left: 0.2em;
  color: var(--_currentColor);
}

.customAlertLink:hover {
  --_currentColor: var(--primaryColorLight);
  transform: scale(1.1);
  color: var(--_currentColor);
}

.customAlertLink[notVisible="true"]::after {
  display: none;
}

.heroSection {
  width: max(100%, 99vw);
  height: min(100vh, 100dvh);
  padding-top: 15vh;
  display: flex;
  align-items: center;
  justify-content: space-around;
  flex-wrap: wrap;
}

.heroSectionArticle {
  display: grid;
  align-items: center;
  justify-content: left;
  max-width: 40%;
  padding-left: 1em;
  position: relative;
  height: 55vh;
}

.callActionButtons {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  justify-content: left;
}

.HeroSection.callActionButtons {
  margin: 1em 0;
}

.heroSectionImage {
  max-width: 75%;
  max-height: 75%;
  object-fit: contain;
}

.AnimatedLottie {
  transform: scaleX(-1) scale(0.9) translateY(5%);
  max-width: 70%;
  max-height: 70%;
  object-fit: contain;
}

.HeroSection.heroSectionTitle {
  font-size: var(--heroSectionTitle);
  margin-bottom: 0.25em;
}

.HeroSection.descriptionParagraph {
  font-size: var(--subHeadingFS);
  max-width: 90%;
}

/* Resister and login forms */

.authForm {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: var(--cardBackgroundColorOpacity);
  color: var(--primaryColorLight);
  border-radius: var(--radius-200);
  align-content: space-around;
  overflow: hidden;
  transition: all 0.5s ease-in-out;
  width: var(--dialogWidth);
  height: var(--dialogHeight);
  box-shadow: var(--box-shadow-500);
}

#registerForm {
  overflow-y: scroll;
  overflow-x: hidden;
}
#registerForm .mainFormContent {
  margin: 5em 3em 3em;
}

.authForm[visible="false"] {
  opacity: 0;
  pointer-events: none;
  transform: translate(-50%, -50%) scale(0);
  z-index: -55555;
  visibility: hidden;
  display: none;
}

.authForm[visible="true"] {
  opacity: 1;
  pointer-events: all;
  transform: translate(-50%, -50%) scale(1);
  z-index: var(--aboveLayer);
  visibility: visible;
}

.formHeader {
  /* background-color: var(--primaryColor); */
  display: flex;
  position: relative;
}

.formLogo {
  width: 200px;
  height: 100px;
  object-fit: contain;
}

.formTitle {
  font-size: var(--subHeadingFS);
  font-weight: bolder;
  color: var(--primaryColorLight);
}

.formErrorMessage {
  position: absolute;
  text-align: center;
  width: 80%;
  top: 30%;
  left: 50%;
  transform: translate(-50%, -30%);
  color: var(--tertiaryColor);
  font-weight: 400;
  display: none;
}

.formErrorMessage[error="true"] {
  display: block;
}
.userAvatarContainer {
  position: absolute;
  top: 4em;
  left: 50%;
  transform: translateX(-50%);
  z-index: var(--aboveLayer);
  width: 150px;
  height: 150px;
  border-radius: 50%;
  border: 2px solid var(--primaryColor);
  padding: 0;
  display: none;
}

.mainFormContent {
  margin: 3em;
  position: relative;
}

.inputFieldContainer {
  position: relative;
  display: grid;
  width: 100%;
  margin-bottom: 1em;
  transition: all 0.5s ease;
}

.authFormInputFiledLabel {
  position: absolute;
  left: 20px;
  top: 0;
  transform: translateY(50%);
}

.inputFieldContainer:has(input:focus, input:focus-within, input:focus-visible)
  .inputField {
  border: 1px solid var(--primaryColor);
}

.inputFieldContainer:has(input:focus, input:focus-within, input:focus-visible)
  .authFormInputFiledLabel {
  color: var(--primaryColor);
  transform: translateY(-50%) scale(1.05);
}
.inputFieldContainer:has(input[hasContent="true"], .inputField:-webkit-autofill)
  .authFormInputFiledLabel {
  transform: translateY(-50%) scale(1.05);
}

#dateOFBirth {
  transform: translateY(-50%) scale(1.05);
}
.inputField {
  width: 100%;
  height: 100%;
}

.inputDescription {
  font-size: var(--descriptionLabelFS);
  margin: 0.5rem 0 0 0.5rem;
  font-weight: 500;
  color: var(--primaryColorLightGray);
}

.inputDescription[valid="false"] {
  color: var(--tertiaryColor);
}

.inputField[valid="false"] {
  color: var(--tertiaryColor);
  border: 1px solid var(--tertiaryColor);
}

.genderList {
  position: relative;

  margin: 0.5em 0 1em;
  height: 50px;
}

.forgetPassword {
  position: absolute;
  text-align: right;
  bottom: -3em;
  right: 0;
  font-size: 0.75rem;
  color: var(--primaryColor);
}

.formActionButtons {
  display: flex;
  align-items: center;
  justify-content: left;
  gap: 1em;
}

.submitBtn {
  width: 130px;
  height: auto;
  padding: 0.5em;
  font-size: 1.2rem;
  font-weight: 500;
}

.formCloseButton {
  width: 130px;
  height: auto;
  padding: 0.5em;
  font-size: 1.2rem;
  font-weight: 500;
}
.formCloseButton > svg {
  max-width: 25px;
}

/* Footer */
.mainFooter {
  width: 100vw;
  height: max(100dvh, 100vh);
  display: grid;
  grid-template-rows: 60% 40%;
  align-items: center;
  overflow: hidden;
}

.Footer.HeroSection {
  grid-row: 1;
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 var(--spacing-400);
}

.Footer.hs-image {
  max-height: var(--size-700);
  max-width: var(--size-700);
  z-index: 2;
  transform: translateY(10%);
}

.Footer.hs-title {
  font-size: var(--heroSectionTitle-xl);
  line-height: 1.3;
}

.floorShape {
  width: 100vw;
  height: 220px;
  fill: var(--primaryColor);
  z-index: -5;
  position: absolute;
  bottom: -5.25em;
  transform: scale(1.1);
  left: 0;
}

.Footer.mainSection {
  grid-row: 2;
  width: 100%;
  height: min(100%, 50dvh);
  background-color: var(--customBackgroundColorDarkMode);
  display: grid;
  grid-template-columns: 10% 30% 50%;
  grid-template-rows: 80% 10%;
  align-items: center;
  justify-content: space-around;
  align-content: center;
  gap: var(--spacing-100);
  position: relative;
}

.Footer.mainSection::before {
  content: "";
  background-color: var(--customBackgroundColorDarkMode);
  width: 100vw;
  height: 50px;
  position: absolute;
  top: -2em;
  left: 0;
}

.socialLinksAside {
  grid-row: 1;
  grid-column: 1;
  width: max(5vw, 5%);
  height: 90%;
  display: grid;
  justify-content: center;
  align-content: space-between;
  transform: translateY(15%);
}

.footerLinksSvg {
  transform: scale(1) rotate(-90deg);
}

.footerLinksSvg:hover {
  transform: scale(1.3) rotate(0deg);
  fill: var(--tertiaryColor);
}

.Footer.Logo {
  width: var(--size-500);
  height: var(--size-500);
  object-fit: contain;
  transform: translateY(15%);
}

.Footer.ActionButtons {
  grid-row: 1;
  grid-column: 3;
  display: flex;
  width: 100%;
  justify-content: center;
  transform: translateY(100%);
}

.copyRight {
  grid-row: 2;
  grid-column: 1 / span 3;
  width: 100%;
  text-align: center;
  color: var(--primaryColorLight);
  padding: var(--spacing-200) 0 0;
}

.author {
  font-weight: bolder;
  color: var(--primaryColor);
  position: relative;
}

.author::after {
  content: attr(authorName);
  position: absolute;
  width: var(--width-200);
  padding: var(--spacing-100);
  left: -115%;
  top: -200%;
  font-weight: 500;
  font-size: 1rem;
  color: var(--primaryColorLight);
  background-color: var(--primaryColor);
  border-radius: var(--radius-200);
  transform: translateY(100%) scale(0);
  opacity: 0;
  transition: var(--transition-5ms-Ease);
}

.author:hover {
  color: var(--tertiaryColor);
}
.author:hover::after {
  transform: translateY(0%) scale(1);
  opacity: 1;
}

/* ? Media Queries  */

/* * Laptops screen size */
@media (max-width: 90em) {
  .floorShape {
    transform: scale(1.2) translateY(5%) scaleY(0.8) rotateY(-30deg);
  }
}

@media (max-width: 90em) and (min-height: 50em) {
  .Footer.hs-image {
    transform: translateY(30%);
  }
  .Footer.hs-title {
    transform: translateY(20%);
  }
}

@media (max-width: 50em) {
  .mainNavigationBar {
    display: none;
  }
  header {
    background-color: var(--backgroundColor);
    display: flex;
    justify-content: space-around;
    transform-origin: right left;
  }

  /* * Menu button */

  .navButton {
    --_lineColor: var(--primaryColorLight);
    width: var(--icon-800);
    height: var(--icon-800);
    background-color: var(--primaryColorLight);
    border-radius: var(--radius-circle);
    border: none;
    display: grid;
    place-items: center;
    place-self: center;
    place-content: center;
    z-index: var(--aboveLayer);
    padding: 0;
    overflow: hidden;
  }

  .hamburger {
    transform: translate(0, 0);
  }

  .hamburger .line {
    transition: all 1s ease;
    stroke: var(--primaryColor);
    fill: none;
  }

  .navButton[isToggled="true"] .hamburger {
    transform: translate(5%, -5%) rotate(45deg);
  }

  .navButton .line {
    stroke-dasharray: 60 31 60 300;
  }

  .navButton[isToggled="true"] .line {
    stroke-dasharray: 60 105 60 300;
    stroke-dashoffset: -90;
  }

  .mainNavigationBar[isExpanded="true"] {
    gap: 0;
    padding: 0;
    margin: 0;
    display: grid;
    grid-column: unset;
    position: fixed;
    inset: 0;
    width: 100vw;
    height: 100dvh;
    background-color: var(--cardBackgroundColorOpacity);
    place-content: center;
    place-items: center;
    place-self: center;
    gap: 3em;
  }
  .mainNavigationBar .callActionButtonsNav {
    transform: translate(0);
  }

  /*  */

  .heroSection {
    margin: 7.5vh 0 0 0;
    align-content: center;
    align-items: center;
    justify-content: center;
    z-index: -10;
  }

  .heroSectionArticle {
    align-items: center;
    justify-content: center;
    text-align: center;
    max-width: 100%;
    padding: 0;
  }

  .HeroSection.callActionButtons {
    justify-content: center;
  }

  .heroSectionImage {
    margin-top: 1em;
    margin-right: 1.5em;
    max-width: 90%;
    max-height: 90%;
  }

  .link {
    font-size: calc(var(--subHeadingFS) + 0.5rem);
  }

  .link[animation="true"] {
    transform: translate(500%);
    animation-fill-mode: forwards;
  }

  /* * Footer */
  .Footer.HeroSection {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    align-content: center;
    gap: 3em;
    height: 100%;
    padding: 0 var(--padding-100);
  }
  .Footer.hs-title {
    width: 100%;
    text-align: center;
    transform: unset;
  }
  .floorShape {
    transform: unset;
    transform: scale(1.2) translateY(-15%);
    bottom: 0.15em;
    height: 50px;
  }
  .Footer.mainSection {
    grid-template-columns: unset;
    grid-template-rows: 10% 30% 15% 25% 20%;
    align-items: center;
    justify-content: center;
    align-content: center;
  }
  .Footer.Logo {
    grid-row: 2;
    grid-column: unset;
    transform: unset;
    z-index: 1;
    margin: 0 auto;
  }
  .Footer.ActionButtons {
    transform: unset;
    grid-column: unset;
    grid-row: 4;
  }
  .socialLinksAside {
    grid-column: unset;
    grid-row: 3;
    display: flex;
    width: 80%;
    justify-content: space-around;
    margin: 0 auto;
  }
  .footerLinksSvg {
    transform: rotate(0) scale(1.1);
  }
  .copyRight {
    grid-column: unset;
    grid-row: 5;
    padding: 0 0 3em;
    font-size: 9px;
  }
}
